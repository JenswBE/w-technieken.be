type Query {
  realisations_files(
    filter: realisations_files_filter
    sort: [String]
    limit: Int
    offset: Int
    page: Int
    search: String
  ): [realisations_files!]!
  realisations_files_by_id(id: ID!, version: String): realisations_files
  realisations_files_aggregated(
    groupBy: [String]
    filter: realisations_files_filter
    limit: Int
    offset: Int
    page: Int
    search: String
    sort: [String]
  ): [realisations_files_aggregated!]!
  realisations_files_by_version(version: String!, id: ID!): version_realisations_files
  realisations(
    filter: realisations_filter
    sort: [String]
    limit: Int
    offset: Int
    page: Int
    search: String
  ): [realisations!]!
  realisations_by_id(id: ID!, version: String): realisations
  realisations_aggregated(
    groupBy: [String]
    filter: realisations_filter
    limit: Int
    offset: Int
    page: Int
    search: String
    sort: [String]
  ): [realisations_aggregated!]!
  realisations_by_version(version: String!, id: ID!): version_realisations
}

type realisations_files {
  id: ID!
  realisations_id(
    filter: realisations_filter
    sort: [String]
    limit: Int
    offset: Int
    page: Int
    search: String
  ): realisations
  directus_files_id(
    filter: directus_files_filter
    sort: [String]
    limit: Int
    offset: Int
    page: Int
    search: String
  ): directus_files
  manual_sort: Int
}

type realisations {
  id: ID!
  sort: Int
  name: String
  """
  Let op! Bij het aanpassen van dit veld veranderd de URL van de pagina. Hierdoor werken links die je deelde op b.v. sociale media naar deze pagina niet meer.
  """
  slug: String
  slogan: String
  main_image(
    filter: directus_files_filter
    sort: [String]
    limit: Int
    offset: Int
    page: Int
    search: String
  ): directus_files
  additional_images(
    filter: realisations_files_filter
    sort: [String]
    limit: Int
    offset: Int
    page: Int
    search: String
  ): [realisations_files]
  additional_images_func: count_functions
}

type directus_files {
  id: ID!
  storage: String!
  filename_disk: String
  filename_download: String!
  title: String
  type: String
  folder(
    filter: directus_folders_filter
    sort: [String]
    limit: Int
    offset: Int
    page: Int
    search: String
  ): directus_folders
  uploaded_by(
    filter: directus_users_filter
    sort: [String]
    limit: Int
    offset: Int
    page: Int
    search: String
  ): directus_users
  uploaded_on: Date
  uploaded_on_func: datetime_functions
  modified_by(
    filter: directus_users_filter
    sort: [String]
    limit: Int
    offset: Int
    page: Int
    search: String
  ): directus_users
  modified_on: Date
  modified_on_func: datetime_functions
  charset: String
  filesize: GraphQLBigInt
  width: Int
  height: Int
  duration: Int
  embed: String
  description: String
  location: String
  tags: JSON
  tags_func: count_functions
  metadata: JSON
  metadata_func: count_functions
  focal_point_x: Int
  focal_point_y: Int
}

type directus_folders {
  id: ID!
  name: String!
  parent(
    filter: directus_folders_filter
    sort: [String]
    limit: Int
    offset: Int
    page: Int
    search: String
  ): directus_folders
}

input directus_folders_filter {
  id: string_filter_operators
  name: string_filter_operators
  parent: directus_folders_filter
  _and: [directus_folders_filter]
  _or: [directus_folders_filter]
}

input string_filter_operators {
  _eq: String
  _neq: String
  _contains: String
  _icontains: String
  _ncontains: String
  _starts_with: String
  _nstarts_with: String
  _istarts_with: String
  _nistarts_with: String
  _ends_with: String
  _nends_with: String
  _iends_with: String
  _niends_with: String
  _in: [String]
  _nin: [String]
  _null: Boolean
  _nnull: Boolean
  _empty: Boolean
  _nempty: Boolean
}

type directus_users {
  id: ID!
  first_name: String
  last_name: String
  email: String
  password: Hash
  location: String
  title: String
  description: String
  tags: JSON
  tags_func: count_functions
  avatar(
    filter: directus_files_filter
    sort: [String]
    limit: Int
    offset: Int
    page: Int
    search: String
  ): directus_files
  language: String
  tfa_secret: Hash
  status: String
  role(
    filter: directus_roles_filter
    sort: [String]
    limit: Int
    offset: Int
    page: Int
    search: String
  ): directus_roles
  token: Hash
  last_access: Date
  last_access_func: datetime_functions
  last_page: String
  provider: String
  external_identifier: String
  auth_data: JSON
  auth_data_func: count_functions
  email_notifications: Boolean
  appearance: String
  theme_dark: String
  theme_light: String
  theme_light_overrides: JSON
  theme_light_overrides_func: count_functions
  theme_dark_overrides: JSON
  theme_dark_overrides_func: count_functions
}

"""
Hashed string values
"""
scalar Hash

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type count_functions {
  count: Int
}

input directus_files_filter {
  id: string_filter_operators
  storage: string_filter_operators
  filename_disk: string_filter_operators
  filename_download: string_filter_operators
  title: string_filter_operators
  type: string_filter_operators
  folder: directus_folders_filter
  uploaded_by: directus_users_filter
  uploaded_on: date_filter_operators
  uploaded_on_func: datetime_function_filter_operators
  modified_by: directus_users_filter
  modified_on: date_filter_operators
  modified_on_func: datetime_function_filter_operators
  charset: string_filter_operators
  filesize: big_int_filter_operators
  width: number_filter_operators
  height: number_filter_operators
  duration: number_filter_operators
  embed: string_filter_operators
  description: string_filter_operators
  location: string_filter_operators
  tags: string_filter_operators
  tags_func: count_function_filter_operators
  metadata: string_filter_operators
  metadata_func: count_function_filter_operators
  focal_point_x: number_filter_operators
  focal_point_y: number_filter_operators
  _and: [directus_files_filter]
  _or: [directus_files_filter]
}

input directus_users_filter {
  id: string_filter_operators
  first_name: string_filter_operators
  last_name: string_filter_operators
  email: string_filter_operators
  password: hash_filter_operators
  location: string_filter_operators
  title: string_filter_operators
  description: string_filter_operators
  tags: string_filter_operators
  tags_func: count_function_filter_operators
  avatar: directus_files_filter
  language: string_filter_operators
  tfa_secret: hash_filter_operators
  status: string_filter_operators
  role: directus_roles_filter
  token: hash_filter_operators
  last_access: date_filter_operators
  last_access_func: datetime_function_filter_operators
  last_page: string_filter_operators
  provider: string_filter_operators
  external_identifier: string_filter_operators
  auth_data: string_filter_operators
  auth_data_func: count_function_filter_operators
  email_notifications: boolean_filter_operators
  appearance: string_filter_operators
  theme_dark: string_filter_operators
  theme_light: string_filter_operators
  theme_light_overrides: string_filter_operators
  theme_light_overrides_func: count_function_filter_operators
  theme_dark_overrides: string_filter_operators
  theme_dark_overrides_func: count_function_filter_operators
  _and: [directus_users_filter]
  _or: [directus_users_filter]
}

input hash_filter_operators {
  _null: Boolean
  _nnull: Boolean
  _empty: Boolean
  _nempty: Boolean
}

input count_function_filter_operators {
  count: number_filter_operators
}

input number_filter_operators {
  _eq: GraphQLStringOrFloat
  _neq: GraphQLStringOrFloat
  _in: [GraphQLStringOrFloat]
  _nin: [GraphQLStringOrFloat]
  _gt: GraphQLStringOrFloat
  _gte: GraphQLStringOrFloat
  _lt: GraphQLStringOrFloat
  _lte: GraphQLStringOrFloat
  _null: Boolean
  _nnull: Boolean
  _between: [GraphQLStringOrFloat]
  _nbetween: [GraphQLStringOrFloat]
}

"""
A Float or a String
"""
scalar GraphQLStringOrFloat

input directus_roles_filter {
  id: string_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  description: string_filter_operators
  ip_access: string_filter_operators
  enforce_tfa: boolean_filter_operators
  admin_access: boolean_filter_operators
  app_access: boolean_filter_operators
  users: directus_users_filter
  users_func: count_function_filter_operators
  _and: [directus_roles_filter]
  _or: [directus_roles_filter]
}

input boolean_filter_operators {
  _eq: Boolean
  _neq: Boolean
  _null: Boolean
  _nnull: Boolean
}

input date_filter_operators {
  _eq: String
  _neq: String
  _gt: String
  _gte: String
  _lt: String
  _lte: String
  _null: Boolean
  _nnull: Boolean
  _in: [String]
  _nin: [String]
  _between: [GraphQLStringOrFloat]
  _nbetween: [GraphQLStringOrFloat]
}

input datetime_function_filter_operators {
  year: number_filter_operators
  month: number_filter_operators
  week: number_filter_operators
  day: number_filter_operators
  weekday: number_filter_operators
  hour: number_filter_operators
  minute: number_filter_operators
  second: number_filter_operators
}

input big_int_filter_operators {
  _eq: GraphQLBigInt
  _neq: GraphQLBigInt
  _in: [GraphQLBigInt]
  _nin: [GraphQLBigInt]
  _gt: GraphQLBigInt
  _gte: GraphQLBigInt
  _lt: GraphQLBigInt
  _lte: GraphQLBigInt
  _null: Boolean
  _nnull: Boolean
  _between: [GraphQLBigInt]
  _nbetween: [GraphQLBigInt]
}

"""
BigInt value
"""
scalar GraphQLBigInt

type directus_roles {
  id: ID!
  name: String!
  icon: String
  description: String
  ip_access: [String]
  enforce_tfa: Boolean!
  admin_access: Boolean!
  app_access: Boolean
  users(
    filter: directus_users_filter
    sort: [String]
    limit: Int
    offset: Int
    page: Int
    search: String
  ): [directus_users]
  users_func: count_functions
}

"""
ISO8601 Date values
"""
scalar Date

type datetime_functions {
  year: Int
  month: Int
  week: Int
  day: Int
  weekday: Int
  hour: Int
  minute: Int
  second: Int
}

input realisations_files_filter {
  id: number_filter_operators
  realisations_id: realisations_filter
  directus_files_id: directus_files_filter
  manual_sort: number_filter_operators
  _and: [realisations_files_filter]
  _or: [realisations_files_filter]
}

input realisations_filter {
  id: number_filter_operators
  sort: number_filter_operators
  name: string_filter_operators
  slug: string_filter_operators
  slogan: string_filter_operators
  main_image: directus_files_filter
  additional_images: realisations_files_filter
  additional_images_func: count_function_filter_operators
  _and: [realisations_filter]
  _or: [realisations_filter]
}

type realisations_files_aggregated {
  group: JSON
  countAll: Int
  count: realisations_files_aggregated_count
  countDistinct: realisations_files_aggregated_count
  avg: realisations_files_aggregated_fields
  sum: realisations_files_aggregated_fields
  avgDistinct: realisations_files_aggregated_fields
  sumDistinct: realisations_files_aggregated_fields
  min: realisations_files_aggregated_fields
  max: realisations_files_aggregated_fields
}

type realisations_files_aggregated_count {
  id: Int
  realisations_id: Int
  directus_files_id: Int
  manual_sort: Int
}

type realisations_files_aggregated_fields {
  id: Float
  realisations_id: Float
  manual_sort: Float
}

"""

"""
type version_realisations_files {
  id: ID!
  realisations_id: JSON
  directus_files_id: JSON
  manual_sort: Int
}

type realisations_aggregated {
  group: JSON
  countAll: Int
  count: realisations_aggregated_count
  countDistinct: realisations_aggregated_count
  avg: realisations_aggregated_fields
  sum: realisations_aggregated_fields
  avgDistinct: realisations_aggregated_fields
  sumDistinct: realisations_aggregated_fields
  min: realisations_aggregated_fields
  max: realisations_aggregated_fields
}

type realisations_aggregated_count {
  id: Int
  sort: Int
  name: Int
  """
  Let op! Bij het aanpassen van dit veld veranderd de URL van de pagina. Hierdoor werken links die je deelde op b.v. sociale media naar deze pagina niet meer.
  """
  slug: Int
  slogan: Int
  """
  Wordt getoond op de startpagina
  """
  main_image: Int
  additional_images: Int
}

type realisations_aggregated_fields {
  id: Float
  sort: Float
}

"""

"""
type version_realisations {
  id: ID!
  sort: Int
  name: String
  """
  Let op! Bij het aanpassen van dit veld veranderd de URL van de pagina. Hierdoor werken links die je deelde op b.v. sociale media naar deze pagina niet meer.
  """
  slug: String
  slogan: String
  main_image: JSON
  additional_images: JSON
  additional_images_func: count_functions
}

type Subscription {
  directus_folders_mutated(event: EventEnum): directus_folders_mutated
  directus_dashboards_mutated(event: EventEnum): directus_dashboards_mutated
  directus_files_mutated(event: EventEnum): directus_files_mutated
  directus_roles_mutated(event: EventEnum): directus_roles_mutated
  directus_panels_mutated(event: EventEnum): directus_panels_mutated
  directus_flows_mutated(event: EventEnum): directus_flows_mutated
  directus_shares_mutated(event: EventEnum): directus_shares_mutated
  directus_users_mutated(event: EventEnum): directus_users_mutated
  realisations_files_mutated(event: EventEnum): realisations_files_mutated
  realisations_mutated(event: EventEnum): realisations_mutated
}

type directus_folders_mutated {
  key: ID!
  event: EventEnum
  data: directus_folders
}

enum EventEnum {
  create
  update
  delete
}

type directus_dashboards_mutated {
  key: ID!
  event: EventEnum
  data: directus_dashboards
}

type directus_dashboards {
  id: ID!
  name: String!
  icon: String
  note: String
  date_created: Date
  date_created_func: datetime_functions
  user_created(
    filter: directus_users_filter
    sort: [String]
    limit: Int
    offset: Int
    page: Int
    search: String
  ): directus_users
  color: String
  panels(
    filter: directus_panels_filter
    sort: [String]
    limit: Int
    offset: Int
    page: Int
    search: String
  ): [directus_panels]
  panels_func: count_functions
}

type directus_panels {
  id: ID!
  dashboard(
    filter: directus_dashboards_filter
    sort: [String]
    limit: Int
    offset: Int
    page: Int
    search: String
  ): directus_dashboards
  name: String
  icon: String
  color: String
  show_header: Boolean!
  note: String
  type: String!
  position_x: Int!
  position_y: Int!
  width: Int!
  height: Int!
  options: JSON
  options_func: count_functions
  date_created: Date
  date_created_func: datetime_functions
  user_created(
    filter: directus_users_filter
    sort: [String]
    limit: Int
    offset: Int
    page: Int
    search: String
  ): directus_users
}

input directus_dashboards_filter {
  id: string_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  note: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  color: string_filter_operators
  panels: directus_panels_filter
  panels_func: count_function_filter_operators
  _and: [directus_dashboards_filter]
  _or: [directus_dashboards_filter]
}

input directus_panels_filter {
  id: string_filter_operators
  dashboard: directus_dashboards_filter
  name: string_filter_operators
  icon: string_filter_operators
  color: string_filter_operators
  show_header: boolean_filter_operators
  note: string_filter_operators
  type: string_filter_operators
  position_x: number_filter_operators
  position_y: number_filter_operators
  width: number_filter_operators
  height: number_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  _and: [directus_panels_filter]
  _or: [directus_panels_filter]
}

type directus_files_mutated {
  key: ID!
  event: EventEnum
  data: directus_files
}

type directus_roles_mutated {
  key: ID!
  event: EventEnum
  data: directus_roles
}

type directus_panels_mutated {
  key: ID!
  event: EventEnum
  data: directus_panels
}

type directus_flows_mutated {
  key: ID!
  event: EventEnum
  data: directus_flows
}

type directus_flows {
  id: ID!
  name: String!
  icon: String
  color: String
  status: String
  trigger: String
  options: JSON
  options_func: count_functions
}

type directus_shares_mutated {
  key: ID!
  event: EventEnum
  data: directus_shares
}

type directus_shares {
  id: ID!
  name: String
  collection: String!
  item: String!
  role(
    filter: directus_roles_filter
    sort: [String]
    limit: Int
    offset: Int
    page: Int
    search: String
  ): directus_roles
  """
  $t:shared_leave_blank_for_passwordless_access
  """
  password: Hash
  user_created(
    filter: directus_users_filter
    sort: [String]
    limit: Int
    offset: Int
    page: Int
    search: String
  ): directus_users
  date_created: Date
  date_created_func: datetime_functions
  """
  $t:shared_leave_blank_for_unlimited
  """
  date_start: Date
  date_start_func: datetime_functions
  """
  $t:shared_leave_blank_for_unlimited
  """
  date_end: Date
  date_end_func: datetime_functions
  times_used: Int
  """
  $t:shared_leave_blank_for_unlimited
  """
  max_uses: Int
}

type directus_users_mutated {
  key: ID!
  event: EventEnum
  data: directus_users
}

type realisations_files_mutated {
  key: ID!
  event: EventEnum
  data: realisations_files
}

type realisations_mutated {
  key: ID!
  event: EventEnum
  data: realisations
}

